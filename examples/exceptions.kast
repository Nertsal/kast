syntax try_impl <- 6 = "try" expr "catch" ex "::" ex_type "->" catch_block;

let try_impl = macro { ~expr :: ast, ~ex :: ast, ~ex_type :: ast, ~catch_block :: ast } => (
	`(
		let result = unwinding (token :: unwind_token) {
			with ( throw: (value :: $ex_type => unwind token (Error value))) (
				Ok $expr
			)
		};
		match result with
			| Ok value -> value
			| Error $ex -> (
				$catch_block
			)
	)
);
