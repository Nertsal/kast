syntax then <- 0 = a ";" b;
syntax then <- 0 = a ";";

syntax let <- 5 = "let" pattern "=" value;

syntax if <- 10 = "if" cond "then" then "else" else;
syntax if -> 10 = cond "?" then ":" else;
syntax if -> 10 = cond "then" then "else" else;

syntax pipe <- 15 = args "|" f;

syntax uplus <- 20 = "+" x;
syntax negate <- 20 = "-" x;
syntax add <- 20 = lhs "+" rhs;
syntax sub <- 20 = lhs "-" rhs;

syntax mul <- 40 = lhs "*" rhs;
syntax div <- 40 = lhs "/" rhs;
syntax mod <- 40 = lhs "%" rhs;

syntax pow -> 60 = lhs "^" rhs;

syntax call <- 100 = f args;

syntax quote -> 200 = "`" expr;
syntax quote -> 200 = "`" "(" expr ")";
syntax unquote -> 200 = "$" expr;
syntax unquote -> 200 = "$" "(" expr ")";

syntax field_access <- 300 = obj "." field;

syntax function_def <- 100000 = "fn" args "{" body "}";
syntax function_def <- 100000 = "(" args ")" "{" body "}";
syntax function_def <- 100000 = "(" ")" "{" body "}";
syntax function_def <- 100000 = "{" body "}";

syntax scope <- 100000 = "(" e ")";
syntax unit <- 100000 = "(" ")";

let pipe = macro (args) { `($args.f $args.args) }